<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CatalyzeUser.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CatalyzeUser</TokenIdentifier>
			<Abstract type="html">A CatalyzeUser is used to represent Users on the catalyze.io API.</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
            
			
			<NodeRef refid="5"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CatalyzeUser/genderToString:</TokenIdentifier>
			<Abstract type="html">Converts a given CatalyzeUserGender to its string representation.</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>+ (NSString *)genderToString:(CatalyzeUserGender)gender</Declaration>
			<Parameters>
				<Parameter>
					<Name>gender</Name>
					<Abstract type="html">the CatalyzeUserGender enum to be converted into a string</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the string representation of the given CatalyzeUserGender enum</Abstract></ReturnValue>
			<Anchor>//api/name/genderToString:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CatalyzeUser/stringToGender:</TokenIdentifier>
			<Abstract type="html">Converts a given string into a CatalyzeUserGender enum.</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>+ (CatalyzeUserGender)stringToGender:(NSString *)genderString</Declaration>
			<Parameters>
				<Parameter>
					<Name>genderString</Name>
					<Abstract type="html">the string representing a CatalyzeUserGender to be converted</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the CatalyzeUserGender enum specified by the given string</Abstract></ReturnValue>
			<Anchor>//api/name/stringToGender:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CatalyzeUser/currentUser</TokenIdentifier>
			<Abstract type="html">The current CatalyzeUser</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>+ (CatalyzeUser *)currentUser</Declaration>
			
			<ReturnValue><Abstract type="html">The current CatalyzeUser</Abstract></ReturnValue>
			<Anchor>//api/name/currentUser</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/logout</TokenIdentifier>
			<Abstract type="html">Logout clears all locally stored information about the User including session information
and tells the API to destroy your session token.</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (void)logout</Declaration>
			
			
			<Anchor>//api/name/logout</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/isAuthenticated</TokenIdentifier>
			<Abstract type="html">YES if the CatalyzeUser has been logged in and has a valid session, otherwise NO</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (BOOL)isAuthenticated</Declaration>
			
			<ReturnValue><Abstract type="html">YES if the CatalyzeUser has been logged in and has a valid session, otherwise NO</Abstract></ReturnValue>
			<Anchor>//api/name/isAuthenticated</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CatalyzeUser/user</TokenIdentifier>
			<Abstract type="html">This is a convenience method for alloc init&apos;ing a new CatalyzeUser.  This CatalyzeUser
is not the currentUser and is not logged in automatically.  Before saving this user
to the catalyze.io API the firstName and lastName must be set.</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>+ (CatalyzeUser *)user</Declaration>
			
			<ReturnValue><Abstract type="html">A new instance of CatalyzeUser</Abstract></ReturnValue>
			<Anchor>//api/name/user</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CatalyzeUser/logIn</TokenIdentifier>
			<Abstract type="html">For logging into the catalyze.io API, you must launch a browser and follow the step outlined
in the catalyze.io API documentation.  This method is used for log in and sign up.  A browser is
launched and after successful authentication, brought back to the application.  For this to work
properly, ensure that your iOS callback URL Scheme was set in your
application:didFinishLaunchingWithOptions: method.</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>+ (void)logIn</Declaration>
			
			
			<Anchor>//api/name/logIn</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/extraForKey:</TokenIdentifier>
			<Abstract type="html">On the catalyze.io API every User has a set of Extras specific to an application. These extras are
any other values stored with the User that are not validated by the API but simply stored and
returned when needed.</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (id)extraForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">the key to look for an extra stored on this CatalyzeUser</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">an extra value stored on this CatalyzeUser</Abstract></ReturnValue>
			<Anchor>//api/name/extraForKey:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/setExtra:forKey:</TokenIdentifier>
			<Abstract type="html">the value to store as an Extra on this CatalyzeUser</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (void)setExtra:(id)extra forKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>extra</Name>
					<Abstract type="html">the value to store as an Extra on this CatalyzeUser</Abstract>
				</Parameter><Parameter>
					<Name>key</Name>
					<Abstract type="html">the key to save the given extra value under for this CatalyzeUser</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setExtra:forKey:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/removeExtraForKey:</TokenIdentifier>
			<Abstract type="html">the key to look for an extra under that should be removed when found</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (void)removeExtraForKey:(NSString *)key</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">the key to look for an extra under that should be removed when found</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeExtraForKey:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/userId</TokenIdentifier>
			<Abstract type="html">the unique identifier of the CatalyzeUser on the catalyze.io API.  This will be set if the
user has been authenticated, otherwise if no network request has been made, this will most likely
be nil.</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (NSString *)userId</Declaration>
			
			<ReturnValue><Abstract type="html">the unique identifier of the CatalyzeUser on the catalyze.io API.  This will be set if the
user has been authenticated, otherwise if no network request has been made, this will most likely
be nil.</Abstract></ReturnValue>
			<Anchor>//api/name/userId</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/setUserId:</TokenIdentifier>
			<Abstract type="html">the unique identifier of the CatalyzeUser on the catalyze.io API.
Used when you have the userId and want to retrieve information about a CatalyzeUser.</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (void)setUserId:(NSString *)userId</Declaration>
			<Parameters>
				<Parameter>
					<Name>userId</Name>
					<Abstract type="html">the unique identifier of the CatalyzeUser on the catalyze.io API.
Used when you have the userId and want to retrieve information about a CatalyzeUser.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setUserId:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/username</TokenIdentifier>
			<Abstract type="html">the username of the CatalyzeUser</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (NSString *)username</Declaration>
			
			<ReturnValue><Abstract type="html">the username of the CatalyzeUser</Abstract></ReturnValue>
			<Anchor>//api/name/username</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/setUsername:</TokenIdentifier>
			<Abstract type="html">This method should never be called by a developer, it is simply for constructing a User from
a saved archive or network call. The username is set through successful authentication.</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (void)setUsername:(NSString *)username</Declaration>
			<Parameters>
				<Parameter>
					<Name>username</Name>
					<Abstract type="html">the valid username to be set.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setUsername:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/firstName</TokenIdentifier>
			<Abstract type="html">the firstName of the CatalyzeUser</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (NSString *)firstName</Declaration>
			
			<ReturnValue><Abstract type="html">the firstName of the CatalyzeUser</Abstract></ReturnValue>
			<Anchor>//api/name/firstName</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/setFirstName:</TokenIdentifier>
			<Abstract type="html">the new first name to be set on the CatalyzeUser</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (void)setFirstName:(NSString *)firstName</Declaration>
			<Parameters>
				<Parameter>
					<Name>firstName</Name>
					<Abstract type="html">the new first name to be set on the CatalyzeUser</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setFirstName:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/lastName</TokenIdentifier>
			<Abstract type="html">the lastName of the CatalyzeUser</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (NSString *)lastName</Declaration>
			
			<ReturnValue><Abstract type="html">the lastName of the CatalyzeUser</Abstract></ReturnValue>
			<Anchor>//api/name/lastName</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/setLastName:</TokenIdentifier>
			<Abstract type="html">the new last name to be set on the CatalyzeUser</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (void)setLastName:(NSString *)lastName</Declaration>
			<Parameters>
				<Parameter>
					<Name>lastName</Name>
					<Abstract type="html">the new last name to be set on the CatalyzeUser</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setLastName:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/street</TokenIdentifier>
			<Abstract type="html">the street of the CatalyzeUser with the format 1234 5th Street</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (NSString *)street</Declaration>
			
			<ReturnValue><Abstract type="html">the street of the CatalyzeUser with the format 1234 5th Street</Abstract></ReturnValue>
			<Anchor>//api/name/street</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/setStreet:</TokenIdentifier>
			<Abstract type="html">the new street to be set on the CatalyzeUser.</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (void)setStreet:(NSString *)street</Declaration>
			<Parameters>
				<Parameter>
					<Name>street</Name>
					<Abstract type="html">the new street to be set on the CatalyzeUser.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setStreet:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/city</TokenIdentifier>
			<Abstract type="html">the city of the CatalyzeUser, such as &quot;Milwaukee&quot;</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (NSString *)city</Declaration>
			
			<ReturnValue><Abstract type="html">the city of the CatalyzeUser, such as &quot;Milwaukee&quot;</Abstract></ReturnValue>
			<Anchor>//api/name/city</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/setCity:</TokenIdentifier>
			<Abstract type="html">the name of the city to set</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (void)setCity:(NSString *)city</Declaration>
			<Parameters>
				<Parameter>
					<Name>city</Name>
					<Abstract type="html">the name of the city to set</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCity:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/state</TokenIdentifier>
			<Abstract type="html">the two letter abbreviation of the state of the CatalyzeUser, such as WI</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (NSString *)state</Declaration>
			
			<ReturnValue><Abstract type="html">the two letter abbreviation of the state of the CatalyzeUser, such as WI</Abstract></ReturnValue>
			<Anchor>//api/name/state</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/setState:</TokenIdentifier>
			<Abstract type="html">the two letter abbreviation of the name of the state to set</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (void)setState:(NSString *)state</Declaration>
			<Parameters>
				<Parameter>
					<Name>state</Name>
					<Abstract type="html">the two letter abbreviation of the name of the state to set</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setState:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/zipCode</TokenIdentifier>
			<Abstract type="html">the zipCode of the CatalyzeUser</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (NSString *)zipCode</Declaration>
			
			<ReturnValue><Abstract type="html">the zipCode of the CatalyzeUser</Abstract></ReturnValue>
			<Anchor>//api/name/zipCode</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/setZipCode:</TokenIdentifier>
			<Abstract type="html">the new zipCode to be set on the CatalyzeUser.</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (void)setZipCode:(NSString *)zipCode</Declaration>
			<Parameters>
				<Parameter>
					<Name>zipCode</Name>
					<Abstract type="html">the new zipCode to be set on the CatalyzeUser.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setZipCode:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/country</TokenIdentifier>
			<Abstract type="html">the country of the CatalyzeUser</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (NSString *)country</Declaration>
			
			<ReturnValue><Abstract type="html">the country of the CatalyzeUser</Abstract></ReturnValue>
			<Anchor>//api/name/country</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/setCountry:</TokenIdentifier>
			<Abstract type="html">the new country to be set on the CatalyzeUser.</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (void)setCountry:(NSString *)country</Declaration>
			<Parameters>
				<Parameter>
					<Name>country</Name>
					<Abstract type="html">the new country to be set on the CatalyzeUser.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCountry:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/address</TokenIdentifier>
			<Abstract type="html">the complete address of the CatalyzeUser of the form 1234 5th Street, Milwaukee, WI, 53202, US</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (NSString *)address</Declaration>
			
			<ReturnValue><Abstract type="html">the complete address of the CatalyzeUser of the form 1234 5th Street, Milwaukee, WI, 53202, US</Abstract></ReturnValue>
			<Anchor>//api/name/address</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/birthDate</TokenIdentifier>
			<Abstract type="html">the birthDate of the CatalyzeUser</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (NSDate *)birthDate</Declaration>
			
			<ReturnValue><Abstract type="html">the birthDate of the CatalyzeUser</Abstract></ReturnValue>
			<Anchor>//api/name/birthDate</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/setBirthDate:</TokenIdentifier>
			<Abstract type="html">the new birth date to be set on the CatalyzeUser.</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (void)setBirthDate:(NSDate *)birthDate</Declaration>
			<Parameters>
				<Parameter>
					<Name>birthDate</Name>
					<Abstract type="html">the new birth date to be set on the CatalyzeUser.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setBirthDate:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/age</TokenIdentifier>
			<Abstract type="html">the age of the CatalyzeUser</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (NSNumber *)age</Declaration>
			
			<ReturnValue><Abstract type="html">the age of the CatalyzeUser</Abstract></ReturnValue>
			<Anchor>//api/name/age</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/setAge:</TokenIdentifier>
			<Abstract type="html">the age to be set on the CatalyzeUser</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (void)setAge:(NSNumber *)age</Declaration>
			<Parameters>
				<Parameter>
					<Name>age</Name>
					<Abstract type="html">the age to be set on the CatalyzeUser</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setAge:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/gender</TokenIdentifier>
			<Abstract type="html">the gender of the CatalyzeUser, one of CatalyzeUserGender enums</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (CatalyzeUserGender)gender</Declaration>
			
			<ReturnValue><Abstract type="html">the gender of the CatalyzeUser, one of CatalyzeUserGender enums</Abstract></ReturnValue>
			<Anchor>//api/name/gender</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/setGender:</TokenIdentifier>
			<Abstract type="html">the CatalyzeUserGender enum to be set on the CatalyzeUser</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (void)setGender:(CatalyzeUserGender)gender</Declaration>
			<Parameters>
				<Parameter>
					<Name>gender</Name>
					<Abstract type="html">the CatalyzeUserGender enum to be set on the CatalyzeUser</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setGender:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/phoneNumber</TokenIdentifier>
			<Abstract type="html">the phone number of the CatalyzeUser</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (NSString *)phoneNumber</Declaration>
			
			<ReturnValue><Abstract type="html">the phone number of the CatalyzeUser</Abstract></ReturnValue>
			<Anchor>//api/name/phoneNumber</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CatalyzeUser/setPhoneNumber:</TokenIdentifier>
			<Abstract type="html">the new phone number to be set on the CatalyzeUser</Abstract>
			<DeclaredIn>CatalyzeUser.h</DeclaredIn>
			
			<Declaration>- (void)setPhoneNumber:(NSString *)phoneNumber</Declaration>
			<Parameters>
				<Parameter>
					<Name>phoneNumber</Name>
					<Abstract type="html">the new phone number to be set on the CatalyzeUser</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setPhoneNumber:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
        
	</File>
</Tokens>